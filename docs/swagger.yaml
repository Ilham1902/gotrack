definitions:
  orders.OrderDetailSwag:
    properties:
      item:
        type: string
      qty:
        type: integer
    type: object
  orders.OrderRequestSwag:
    properties:
      customer:
        type: string
      description:
        type: string
      employee_id:
        type: integer
      location:
        type: string
      order_details:
        items:
          $ref: '#/definitions/orders.OrderDetailSwag'
        type: array
    type: object
  users.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  users.SignUpRequest:
    properties:
      password:
        type: string
      re_type_password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  users.TrackRequest:
    properties:
      user_id:
        type: integer
    type: object
host: gotrack-production-2b8d.up.railway.app
info:
  contact: {}
  description: This is documentation GoTrack.
  title: GoTrack Documentation
  version: 1.0.0
paths:
  /api/order:
    get:
      consumes:
      - application/json
      description: Get all orders with search and pagination
      parameters:
      - description: Search term
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Creates a new order with details provided in the request body.
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/orders.OrderRequestSwag'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Create a new order
      tags:
      - Orders
  /api/order/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a order from the database by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delete a order by ID
      tags:
      - Orders
    get:
      consumes:
      - application/json
      description: Get By ID order with details provided in the request body.
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get By ID order
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Updates a new order with details provided in the request body.
      parameters:
      - description: Order data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/orders.OrderRequestSwag'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Update a new order
      tags:
      - Orders
  /api/order/delivery/{id}:
    post:
      consumes:
      - application/json
      description: Deliverys a new order with details provided in the request body.
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delivery order
      tags:
      - Delivery
  /api/order/success/{id}:
    post:
      consumes:
      - multipart/form-data
      description: Delivery Success
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bukti Pengiriman Success
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Delivery Success
      tags:
      - Delivery
  /api/users:
    get:
      consumes:
      - application/json
      description: Get all users with search and pagination
      parameters:
      - description: Search term
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - Users
  /api/users/{id}:
    get:
      consumes:
      - application/json
      description: Get By ID order with details provided in the request body.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Get By ID order
      tags:
      - Users
  /api/users/login:
    post:
      consumes:
      - application/json
      description: This endpoint is used for user login
      parameters:
      - description: Login Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/users.LoginRequest'
      produces:
      - application/json
      responses: {}
      summary: User Login
      tags:
      - Users
  /api/users/signup:
    post:
      consumes:
      - application/json
      description: This endpoint is used for user signup
      parameters:
      - description: Sign Up Request
        in: body
        name: signUpRequest
        required: true
        schema:
          $ref: '#/definitions/users.SignUpRequest'
      produces:
      - application/json
      responses: {}
      summary: User Signup
      tags:
      - Users
  /api/users/track:
    post:
      consumes:
      - application/json
      description: This endpoint is used for Track Employee
      parameters:
      - description: Sign Up Request
        in: body
        name: TrackRequest
        required: true
        schema:
          $ref: '#/definitions/users.TrackRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: Track Employee
      tags:
      - Users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
